{"version":3,"sources":["componetns/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","formattedTime","name","props","className","React","Component","App","clockName","hasClock","clockNameId","handleWindowClick","handleWindowContext","event","preventDefault","newName","value","now","toString","getRandomName","document","addEventListener","prevProps","prevState","undefined","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,kCAeE,WACEN,OAAOO,cAAcR,KAAKD,WAhB9B,oBAmBE,WACE,IAAMU,EAAgBT,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,GACzDG,EAASV,KAAKW,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGH,WAhCX,GAA2BI,IAAMC,WCU1B,IAAMC,EAAb,4MACEnB,MAAQ,CACNoB,UAAW,UACXC,UAAU,GAHd,EAMEC,YAAc,EANhB,EAsCEC,kBAAoB,WAClB,EAAKhB,SAAS,CAAEc,UAAU,KAvC9B,EA0CEG,oBAAsB,SAACC,GACrBA,EAAMC,iBAEN,EAAKnB,SAAS,CAAEc,UAAU,KA7C9B,uDAQE,WAAqB,IAAD,OAClBjB,KAAKkB,YAAcjB,OAAOC,aAAY,WACpC,IAAMqB,EArBZ,WACE,IAAMC,EAAQ1B,KAAK2B,MAAMC,WAAWnB,OAAO,GAE3C,MAAM,SAAN,OAAgBiB,GAkBIG,GAEhB,EAAKxB,SAAS,CAAEa,UAAWO,MAC1B,MAEHK,SAASC,iBAAiB,QAAS7B,KAAKmB,mBACxCS,SAASC,iBAAiB,cAAe7B,KAAKoB,uBAhBlD,gCAmBE,SACEU,EACAC,GAEIA,EAAUf,YAAchB,KAAKJ,MAAMoB,gBACVgB,IAAxBF,EAAUd,WACVhB,KAAKJ,MAAMqB,UAEdb,QAAQ6B,MAAR,uBAA8BF,EAAUf,UAAxC,eAAwDhB,KAAKJ,MAAMoB,cA3BzE,kCA+BE,WACEf,OAAOO,cAAcR,KAAKkB,aAE1BU,SAASM,oBAAoB,cAAelC,KAAKoB,qBACjDQ,SAASM,oBAAoB,QAASlC,KAAKmB,qBAnC/C,oBAgDE,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECZ,KAAKJ,MAAMqB,UACV,cAAC,EAAD,CAAOP,KAAMV,KAAKJ,MAAMoB,mBAtDlC,GAAyBH,IAAMC,WCb/BqB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.39e2d354.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const formattedTime = this.state.today.toUTCString().slice(-12, -4);\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {formattedTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Clock } from './componetns/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    this.clockNameId = window.setInterval(() => {\n      const newName = getRandomName();\n\n      this.setState({ clockName: newName });\n    }, 3300);\n\n    document.addEventListener('click', this.handleWindowClick);\n    document.addEventListener('contextmenu', this.handleWindowContext);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<State>,\n    prevState: Readonly<State>,\n  ): void {\n    if (prevState.clockName !== this.state.clockName\n      && prevProps.clockName === undefined\n      && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.clockNameId);\n\n    document.removeEventListener('contextmenu', this.handleWindowContext);\n    document.removeEventListener('click', this.handleWindowClick);\n  }\n\n  handleWindowClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleWindowContext = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}